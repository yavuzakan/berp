
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class ba102 extends javax.swing.JFrame {
public  Connection c;
public Statement st;
public  ResultSet rs;
    /**
     * Creates new form ba102
     */
    public ba102() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Barkod Sorgula - BA102");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        
        //Arama işi
        this.ara();
    }//GEN-LAST:event_jTextField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ba102.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ba102.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ba102.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ba102.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ba102().setVisible(true);
            }
        });
    }

    
    
      public void ara()
    {
            DefaultTableModel tablo = (DefaultTableModel) jTable1.getModel();
         
        int rows = tablo.getRowCount(); 
        for(int i = rows - 1; i >=0; i--)
        {
           tablo.removeRow(i); 
        }
        
        String id = jTextField1.getText();
   
        
        try {
            Class.forName("org.sqlite.JDBC");
            c = DriverManager.getConnection("jdbc:sqlite:berp.sqlite");
            st = c.createStatement();
            
             String query = "SELECT * FROM depo2 where id = "+ id +"";
            String urunid = null;
             String geldb = null;
        rs = st.executeQuery(query);
       
        
               while(rs.next())
         {
              tablo.addRow(new Object[] {  "Ürün" ,  "Miktar" , "Depo" , "Durum" });
            
            String urun = rs.getString("urun"); 
             urunid = rs.getString("urunid"); 
            String miktar  = rs.getString("miktar"); 
            String birim  = rs.getString("birim"); 
            String depo  = rs.getString("depo"); 
            String depoid  = rs.getString("depoid"); 
            String durum = rs.getString("durum"); 
            geldb = rs.getString("geldb"); 
            
          
            
    if (durum.equals("pasif"))
    {
    durum ="X";
    depo ="X";
    }
    else
    {
    durum = "Depo'da";
    }


          //yarım bıraktın devam et.
        tablo.addRow(new Object[] {  urun ,  miktar +" " + birim , depo , durum });
            }
              
 if(geldb.equals("satislar"))
 {
     
                 String query2 = "SELECT * FROM satislar where id = "+ urunid +"";
            
           
        rs = st.executeQuery(query2);
        tablo.addRow(new Object[] {  "Ürün" ,  "Miktar" , "Fiyat" , "Durum" , "Sipariş Tarihi" , "Teslim Tarihi" , "Bitiş Tarihi" });
               while(rs.next())
         {
             
            
            String musteri = rs.getString("musteri"); 
           
            String urun  = rs.getString("urun"); 
            String fiyat = rs.getString("fiyat"); 
            String miktar  = rs.getString("miktar"); 
            String birim  = rs.getString("birim"); 
            String durum = rs.getString("durum"); 
            String siptarihi = rs.getString("siptarihi"); 
            String testarih = rs.getString("testarih"); 
            String bittarih = rs.getString("bittarih"); 
            
            
          
    tablo.addRow(new Object[] {  urun ,  miktar +" " + birim , fiyat , durum , siptarihi , testarih , bittarih });
            }
     
     
     
        String query3 = "SELECT * FROM urun1 where anaurunid = "+ urunid +"";
            
           
        rs = st.executeQuery(query3);
         tablo.addRow(new Object[] { "Ana Ürün" , "Teslim Tarihi" , "Ürün" , "Kayıt Tarihi" , "Bölüm" , "İş Durumu" , "Tarih" ,"Miktar", "Tarih" , "Kalite Durumu" , "Tarih" , "Kaliteci" });
               while(rs.next())
         {
             
            
            String anaurun = rs.getString("anaurun"); 
           
            String tarih1 = rs.getString("tarih1"); 
            String urun = rs.getString("urun"); 
            String  tarih2 = rs.getString("tarih2"); 
            String bolum  = rs.getString("bolum"); 
            String durum  = rs.getString("durum"); 
            String tarih3  = rs.getString("tarih3"); 
            String miktar = rs.getString("miktar"); 
            String birim = rs.getString("birim"); 
            String tarih4 = rs.getString("tarih4"); 
            String kalite = rs.getString("kalite"); 
            String  ktarih = rs.getString("ktarih"); 
            String kkisi  = rs.getString("kkisi"); 
        
            
          
    tablo.addRow(new Object[] { anaurun , tarih1 , urun , tarih2 , bolum , durum , tarih3 , miktar +" - "+ birim , tarih4 , kalite , ktarih , kkisi });
            }
     
     
     
     
     
     
 
 }
 
 
 if(geldb.equals("teslim"))
 {
     
         
        String query3 = "SELECT * FROM teslim where id = "+ urunid +"";
            
           
        rs = st.executeQuery(query3);
         tablo.addRow(new Object[] { "Teslim Eden" , "Fatura" , "Talep Numarası" , "Ürün" , "Firma" , "Miktar" , "İrsaliye" , "Depo" , "Not" , "Kişi" , "Tarih" , "Kalite Durumu ", "Tarih","Kaliteci"});
               while(rs.next())
         {
             
            
            String teden = rs.getString("teden"); 
            String fatura = rs.getString("fatura"); 
            String talepno = rs.getString("talepno"); 
            String urun = rs.getString("urun"); 
            String firma = rs.getString("firma"); 
            String miktar  = rs.getString("miktar"); 
            String birim = rs.getString("birim"); 
            String irsaliye = rs.getString("irsaliye"); 
            String depo  = rs.getString("depo"); 
            String not2 = rs.getString("not2"); 
            String kisi = rs.getString("kisi"); 
            String bugun = rs.getString("bugun"); 
            String  kalite = rs.getString("kalite"); 
            String  ktarih = rs.getString("ktarih"); 
            String  kkise = rs.getString("kkisi"); 
           
      
        
            
          
    tablo.addRow(new Object[] { teden,fatura,talepno,urun,firma,miktar+" - "+birim,irsaliye,depo,not2,kisi,bugun,kalite,ktarih,kkise });
            } 
     
     
 }
               
               
               
               
               
               
               
               
               
               
               
 c.close();
rs.close();
st.close();

       }
       catch ( Exception e ) {
      System.err.println( e.getClass().getName() + ": " + e.getMessage() );
    
    }

    }
    
   
    
      
      
      
      
      
      
    
    
    
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
